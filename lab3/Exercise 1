class QueueUsingStacks:
    def __init__(self):
        self.stack_in = []
        self.stack_out = []
    
    def enqueue(self, value):
        self.stack_in.append(value)
    
    def dequeue(self):
        if not self.stack_out:
            while self.stack_in:
                self.stack_out.append(self.stack_in.pop())
        if self.stack_out:
            return self.stack_out.pop()
        else:
            return "Queue is empty"

    def is_empty(self):
        return len(self.stack_in) == 0 and len(self.stack_out) == 0

# Initialize the queue
queue = QueueUsingStacks()

# Enqueue elements
queue.enqueue(10)
queue.enqueue(20)
queue.enqueue(30)

# Dequeue elements and print them
print(queue.dequeue())  # Output: 10 (FIFO)
print(queue.dequeue())  # Output: 20
print(queue.dequeue())  # Output: 30
print(queue.dequeue())  # Output: "Queue is empty" (No more elements)
